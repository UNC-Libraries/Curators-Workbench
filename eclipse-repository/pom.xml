<?xml version="1.0" encoding="UTF-8"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>curators.workbench</groupId>
		<artifactId>parent</artifactId>
		<version>4.1.4-SNAPSHOT</version>
	</parent>
	<artifactId>eclipse-repository</artifactId>
	<packaging>eclipse-repository</packaging>
	<build>
		<plugins>
			<!-- <plugin> <groupId>${tycho-groupid}</groupId> <artifactId>tycho-p2-publisher-plugin</artifactId> 
				<version>${tycho-version}</version> <configuration> <publishArtifacts>true</publishArtifacts> 
				</configuration> </plugin> -->
			<plugin>
				<groupId>${tycho-groupid}</groupId>
				<artifactId>tycho-p2-repository-plugin</artifactId>
				<version>${tycho-version}</version>
				<configuration>
					<includeAllDependencies>true</includeAllDependencies>
					<createArtifactRepository>true</createArtifactRepository>
				</configuration>
			</plugin>
			<plugin>
				<groupId>${tycho-groupid}</groupId>
				<artifactId>tycho-p2-director-plugin</artifactId>
				<version>${tycho-version}</version>
				<executions>
					<execution>
						<id>materialize-products</id>
						<phase>package</phase>
						<goals>
							<goal>materialize-products</goal>
						</goals>
					</execution>
					<execution>
						<id>archive-products</id>
						<phase>package</phase>
						<goals>
							<goal>archive-products</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<products>
						<product>
							<id>curators-workbench</id>
							<rootFolder>curators-workbench</rootFolder>
						</product>
					</products>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-install-plugin</artifactId>
				<groupId>org.apache.maven.plugins</groupId>
				<version>2.3.1</version>
				<executions>
					<execution>
						<id>noexecution</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptors>
						<descriptor>macosx/macosx-app-assemble.xml</descriptor>
					</descriptors>
					<outputDirectory>${project.build.directory}/products</outputDirectory>
					<finalName>curators-workbench-macosx.cocoa.x86_64</finalName>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> <!-- this is used for inheritance merges -->
						<phase>package</phase> <!-- bind to the packaging phase -->
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<dependencies>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant-jsch</artifactId>
						<version>1.8.4</version>
					</dependency>
					<dependency>
						<groupId>ant-contrib</groupId>
						<artifactId>ant-contrib</artifactId>
						<version>20020829</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<!-- Installs the ZIPs and repository to versioned folder on web server: 
							Should replaces snapshot versions. Fails if you try to post the same final 
							version twice. -->
						<id>deploy</id>
						<phase>install-disabled</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<taskdef name="if" classname="net.sf.antcontrib.logic.IfTask"
									classpathref="maven.plugin.classpath" />
								<if>
									<contains string="${project.version}" substring="-SNAPSHOT" />
									<then>
										<sshexec host="${cw.deploy.host}" username="${cw.deploy.username}"
											passphrase="${cw.deploy.passphrase}" keyfile="${cw.deploy.keyfile}"
											trust="true"
											command="rm -rf --preserve-root ${cw.deploy.basedir}/${project.version}"
											verbose="true" failonerror="false" />
									</then>
								</if>
								<sshexec host="${cw.deploy.host}" username="${cw.deploy.username}"
									passphrase="${cw.deploy.passphrase}" keyfile="${cw.deploy.keyfile}"
									trust="true" verbose="true"
									command="mkdir ${cw.deploy.basedir}/${project.version}" />
								<sshexec host="${cw.deploy.host}" username="${cw.deploy.username}"
									passphrase="${cw.deploy.passphrase}" keyfile="${cw.deploy.keyfile}"
									trust="true" verbose="true"
									command="mkdir ${cw.deploy.basedir}/${project.version}/repository" />
								<scp
									todir="${cw.deploy.username}@${cw.deploy.host}:${cw.deploy.basedir}/${project.version}/repository"
									passphrase="${cw.deploy.passphrase}" keyfile="${cw.deploy.keyfile}"
									verbose="true" trust="true">
									<fileset dir="target/repository" />
								</scp>
								<sshexec host="${cw.deploy.host}" username="${cw.deploy.username}"
									passphrase="${cw.deploy.passphrase}" keyfile="${cw.deploy.keyfile}"
									trust="true" verbose="true"
									command="mkdir ${cw.deploy.basedir}/${project.version}/products" />
								<scp
									todir="${cw.deploy.username}@${cw.deploy.host}:${cw.deploy.basedir}/${project.version}/products"
									passphrase="${cw.deploy.passphrase}" keyfile="${cw.deploy.keyfile}"
									verbose="true" trust="true">
									<fileset dir="target/products">
										<include name="*.zip" />
									</fileset>
								</scp>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
